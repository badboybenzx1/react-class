{"version":3,"sources":["components/User.js","components/Clock.js","App.js","reportWebVitals.js","index.js"],"names":["User","props","name","Clock","useState","Date","currentDate","setCurrentDate","useEffect","secTimer","setInterval","clearInterval","toUTCString","Header","Layout","Footer","Content","App","className","style","height","color","margin","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAWeA,EARF,SAACC,GACZ,OAAO,8BAAMA,EAAMC,Q,QCcNC,EAhBD,WACZ,MAAsCC,mBAAS,IAAIC,MAAnD,mBAAOC,EAAP,KAAoBC,EAApB,KAUA,OARAC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WACzBH,EAAe,IAAIF,QAClB,KAEH,OAAO,kBAAMM,cAAcF,MAC1B,IAGD,oEAAuCH,EAAYM,kBCR/CC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,OAAQC,EAAYF,IAAZE,QAyBTC,MAvBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,CAAQC,MAAO,CAAEC,OAAQ,SAAzB,UACE,cAACP,EAAD,CAAQM,MAAO,CAAEE,MAAO,QAAxB,yBAEA,cAACL,EAAD,CAASG,MAAO,CAAEG,OAAQ,OAAQC,UAAW,UAA7C,SACE,gCACE,kDACA,cAAC,EAAD,CAAMrB,KAAK,YACX,cAAC,EAAD,CAAMA,KAAK,YACX,cAAC,EAAD,CAAMA,KAAK,iBAIf,cAACa,EAAD,UACE,cAAC,EAAD,YCZKS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.32b93e8e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst User = (props) => {\n  return <div>{props.name}</div>;\n};\n\nUser.propTypes = {\n  name: PropTypes.string,\n};\n\nexport default User;\n","import React, { useState, useEffect } from \"react\";\n\nconst Clock = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  useEffect(() => {\n    let secTimer = setInterval(() => {\n      setCurrentDate(new Date());\n    }, 1000);\n\n    return () => clearInterval(secTimer);\n  }, []);\n\n  return (\n    <div>Clock component (Currenct Date): {currentDate.toUTCString()}</div>\n  );\n};\n\nexport default Clock;\n","import \"./App.css\";\nimport { Layout } from \"antd\";\n\nimport User from \"./components/User\";\nimport Clock from \"./components/Clock\";\n\nconst { Header, Footer, Content } = Layout;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout style={{ height: \"100vh\" }}>\n        <Header style={{ color: \"#fff\" }}>React Class</Header>\n\n        <Content style={{ margin: \"60px\", textAlign: \"center\" }}>\n          <div>\n            <h1>User components </h1>\n            <User name=\"Test 01\"></User>\n            <User name=\"Test 02\"></User>\n            <User name=\"Test 03\"></User>\n          </div>\n        </Content>\n\n        <Footer>\n          <Clock></Clock>\n        </Footer>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}